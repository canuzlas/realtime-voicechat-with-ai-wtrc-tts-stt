services:
  # MongoDB Database
  db:
    image: mongo:6.0
    container_name: voicechat-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: voicechat
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - voicechat-network

  # Backend API Server
  server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: voicechat-server
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    env_file:
      - .env
    environment:
      - MONGODB_URI=mongodb://db:27017/voicechat
      - NODE_ENV=${NODE_ENV:-production}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - voicechat-network
    healthcheck:
      test: [ "CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => process.exit(r.statusCode === 200 ? 0 : 1))" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mongo_data:
    name: voicechat-mongo-data

networks:
  voicechat-network:
    name: voicechat-network
    driver: bridge
