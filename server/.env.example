# =============================================
# SERVER CONFIGURATION
# =============================================

# Server port (default: 3000)
PORT=3000

# Node environment (development, production, test)
NODE_ENV=production

# =============================================
# DATABASE CONFIGURATION
# =============================================

# MongoDB connection string
# For Docker: mongodb://db:27017/english_chat
# For local: mongodb://localhost:27017/english_chat
MONGODB_URI=mongodb://localhost:27017/english_chat

# Alternative MongoDB URL variable (fallback)
# MONGO_URL=mongodb://localhost:27017/english_chat

# =============================================
# JWT AUTHENTICATION
# =============================================

# Secret key for JWT token signing (CHANGE THIS IN PRODUCTION!)
# Generate a secure random string: openssl rand -base64 32
JWT_SECRET=your_super_secret_jwt_key_change_this_in_production

# =============================================
# OPENAI / GPT API CONFIGURATION
# =============================================

# OpenAI API URL (default: https://api.openai.com/v1/chat/completions)
GPT_URL=https://api.openai.com/v1/chat/completions

# Alternative: GPT Mini URL (if using a different endpoint)
# GPT_MINI_URL=https://api.openai.com/v1/chat/completions

# OpenAI API Key (required for chat functionality)
GPT_API_KEY=sk-your-openai-api-key-here

# Alternative API Key variable names (fallback)
# GPT_KEY=sk-your-openai-api-key-here
# GPT_MINI_KEY=sk-your-openai-api-key-here

# GPT Model to use (default: gpt-3.5-turbo)
GPT_MODEL=gpt-3.5-turbo

# =============================================
# GOOGLE CLOUD CREDENTIALS (TTS & STT)
# =============================================

# Path to Google Cloud service account JSON file
# This is used for both Text-to-Speech and Speech-to-Text services
# Example: /path/to/your/service-account-key.json
GOOGLE_APPLICATION_CREDENTIALS=/path/to/google-credentials.json

# Alternative: Direct API keys (if not using service account file)
# GOOGLE_TTS_KEY=your_google_tts_api_key
# GOOGLE_TTS_TOKEN=your_google_tts_token
# GOOGLE_SPEECH_KEY=your_google_speech_api_key

# =============================================
# SOCKET.IO CONFIGURATION
# =============================================

# CORS origin for Socket.IO (default: *)
# In production, set this to your frontend URL
# Example: http://localhost:5173 or https://yourdomain.com
SIO_ORIGIN=*

# =============================================
# NOTES
# =============================================
# 
# 1. Google Cloud Setup:
#    - Create a project at https://console.cloud.google.com
#    - Enable "Cloud Text-to-Speech API" and "Cloud Speech-to-Text API"
#    - Create a service account and download the JSON key
#    - Set GOOGLE_APPLICATION_CREDENTIALS to the path of that JSON file
#
# 2. OpenAI Setup:
#    - Get your API key from https://platform.openai.com/api-keys
#    - Set GPT_API_KEY with your key
#
# 3. Security:
#    - Never commit the actual .env file with real credentials
#    - Always use strong, random values for JWT_SECRET
#    - Restrict SIO_ORIGIN in production to your frontend domain
#
# 4. Docker:
#    - Copy this file to .env and fill in your values
#    - The docker-compose.yml will use these values
#    - For GOOGLE_APPLICATION_CREDENTIALS in Docker, mount the file
#      or use the key content directly as an environment variable
